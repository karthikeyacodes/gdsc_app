import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        // This is the theme of your application.
        //
        // TRY THIS: Try running your application with "flutter run". You'll see
        // the application has a purple toolbar. Then, without quitting the app,
        // try changing the seedColor in the colorScheme below to Colors.green
        // and then invoke "hot reload" (save your changes or press the "hot
        // reload" button in a Flutter-supported IDE, or press "r" if you used
        // the command line to start the app).
        //
        // Notice that the counter didn't reset back to zero; the application
        // state is not lost during the reload. To reset the state, use hot
        // restart instead.
        //
        // This works for code too, not just values: Most code changes can be
        // tested with just a hot reload.
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.greenAccent ),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Profile_Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {
    setState(() {
      // This call to setState tells the Flutter framework that something has
      // changed in this State, which causes it to rerun the build method below
      // so that the display can reflect the updated values. If we changed
      // _counter without calling setState(), then the build method would not be
      // called again, and so nothing would appear to happen.
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    // This method is rerun every time setState is called, for instance as done
    // by the _incrementCounter method above.
    //
    // The Flutter framework has been optimized to make rerunning build methods
    // fast, so that you can just rebuild anything that needs updating rather
    // than having to individually change instances of widgets.

    return Scaffold(
      appBar: AppBar(

        leading: IconButton(
          icon: Icon(Icons.arrow_back ),
          onPressed: (){}
        ),
        // TRY THIS: Try changing the color here to a specific color (to
        // Colors.amber, perhaps?) and trigger a hot reload to see the AppBar
        // change color while the other colors stay the same.
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        // Here we take the value from the MyHomePage object that was created by
        // the App.build method, and use it to set our appbar title.
        actions: [
          // IconButton(onPressed:  (){}, icon: Icon(Icons.shield_moon_sharp )),
          IconButton(onPressed:  (){}, icon: Icon(Icons.edit),),

        ],
        title: Text('Profile'),
        centerTitle : true,

      ),
      body: Container(
        width:double.infinity,
        height:double.infinity,
        color: Colors.black,
        child: ListView(
          children: [
            Padding(
              padding:  EdgeInsets.only(top: 80) ,
              child: Column(
                children:  [
                  CircleAvatar(
                    radius :75,
                    child: IconButton(onPressed: (){
                      print('Add Profile picture');
                    },
                      icon: Icon(Icons.camera_alt),),
                    // backgroundImage: NetworkImage('/asset/images/img.png',)
                  ),
                ]
              ),
            ),

               Row(
                 mainAxisAlignment : MainAxisAlignment.spaceEvenly ,
                   children: [

                   Text("UserID:",style: TextStyle(color: Colors.white,fontWeight: FontWeight.bold,fontSize: 25)),
                   Container(
                    width: 200,
                    child: Padding(
                      padding: const EdgeInsets.only(top:15),
                      child: TextField(
                        style: TextStyle(color: Colors.white,fontSize: 20),
                        decoration: InputDecoration(

                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(15),
                            borderSide: BorderSide(
                              color: Colors.white,
                              width: 4,
                            ),
                          ),
                            suffixIcon: IconButton(
                              icon: Icon(Icons.remove_red_eye,color: Colors.greenAccent),
                              onPressed: (){},
                            )
                        ),
                      ),
                    ),

                                 ),
                 ],
               ),
            Row(
              mainAxisAlignment : MainAxisAlignment.spaceEvenly ,
              children: [
                Text("Bio :   ",style: TextStyle(color: Colors.white,fontWeight: FontWeight.bold,fontSize: 25)),
                Container(
                  width: 200,

                  child: Padding(
                    padding: const EdgeInsets.only(top:15),
                    child: TextField(
                      style: TextStyle(color: Colors.white,fontSize: 20),
                      decoration: InputDecoration(

                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(15),
                          borderSide: BorderSide(
                            color: Colors.white,
                            width: 2,
                          ),
                        ),
                      suffixIcon: IconButton(
                        icon: Icon(Icons.remove_red_eye,color: Colors.greenAccent),
                        onPressed: (){},
                      )
                      ),
                    ),
                  ),

                ),
              ],
            )  ,

            Padding(
              padding: const EdgeInsets.only(top:8.0),
              child: Container(
                height:100,

                child: Row (
                  mainAxisAlignment : MainAxisAlignment.spaceEvenly ,

                    children : [
                ElevatedButton(onPressed: (){print('Posts');}, child:Text("Posts",style: TextStyle(fontSize: 16)),
                style: ElevatedButton.styleFrom(
                fixedSize: Size(120, 70), // Set the width and height of the button
                ),),

                ElevatedButton(onPressed: (){print('Followers');}, child:Text("Followers",style: TextStyle(fontSize: 16)),
                  style: ElevatedButton.styleFrom(
                    fixedSize: Size(120, 70), // Set the width and height of the button
                  ),),
                ElevatedButton(onPressed: (){print('Following');}, child:Text("Following",style: TextStyle(fontSize: 16)),
                  style: ElevatedButton.styleFrom(
                    fixedSize: Size(120, 70), // Set the width and height of the button
                  ),),
                         ]
                ),
              ),
            ),
            Padding(
              padding: const EdgeInsets.only(left: 10,top:10),
              child: Row(
                children: [
                  Icon(
                    Icons.save, // Replace with the save icon you want
                    color: Colors.white,
                    size: 24, // Adjust the size of the icon
                  ),
                  SizedBox(width: 8), // Add some spacing between the icon and text
                  Text(
                    "Saved Posts",
                    style: TextStyle(fontSize: 20, color: Colors.white),
                  ),
                ],
              ),

            ),
            Padding(
              padding: const EdgeInsets.only(left: 10,top:10),
              child: Row(
                children: [
                  Icon(
                    Icons.logout, // Replace with the icon you want
                    color: Colors.white,
                    size: 24, // Adjust the size of the icon
                  ),
                  SizedBox(width: 8), // Add some spacing between the icon and text
                  Text(
                    "Log out",
                    style: TextStyle(fontSize: 20, color: Colors.white),
                  ),
                ],
              ),

            )
          ],

        ),
      ),

    );
  }
}
